apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Chart.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["litellm"]
        args:
          - "--config"
          - "/app/config.yaml"
          - "--port"
          - "4000"
          - "--host"
          - "0.0.0.0"
        ports:
        - containerPort: 4000
          name: http
        env:
        - name: LITELLM_MASTER_KEY
          value: {{ .Values.litellm.masterKey | quote }}
        volumeMounts:
        - name: config-volume
          mountPath: /app/config.yaml
          subPath: config.yaml
        livenessProbe:
          httpGet:
            path: /health
            port: 4000
            httpHeaders:
            - name: Authorization
              value: "Bearer {{ .Values.litellm.masterKey }}"
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 4000
            httpHeaders:
            - name: Authorization
              value: "Bearer {{ .Values.litellm.masterKey }}"
          initialDelaySeconds: 10
          periodSeconds: 15
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
      volumes:
      - name: config-volume
        configMap:
          name: {{ .Chart.Name }}-config